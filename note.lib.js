window.handleFormat=function(t){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(s===e){showNotification(`Please select text to ${t}!`);return}let errorMsg="";while(1){const a=[];if(errorMsg)a.push("message:"+errorMsg);let opts="";if(t==="italic")opts="Choose Format, MarkDown (*text*)|1, MarkUp (<i>text</i>)|2";else if(t==="underline")opts="Choose Format, MarkDown (__text__)|1, MarkUp (<u>text</u>)|2";else if(t==="bold")opts="Choose Format, MarkDown (**text**)|1, MarkUp (<b>text</b>)|2";else if(t==="code")opts="Choose Format, MarkDown (```)|1, MarkUp (<code>)|2";a.push("select: "+opts);const n=await showModal({title:`${t[0].toUpperCase()+t.slice(1)} Text`,content:a,button:"Cancel, OK"});if(!n||!n.action||n.action==="Cancel")return;const c=String(n.values.choose_format).trim();if(c===""||c==="Choose Format"){errorMsg="Please select a format!";continue}const sel=v.slice(s,e);let f="";if(t==="italic")f=c==="2"?`<i>${sel}</i>`:`*${sel}*`;else if(t==="underline")f=c==="2"?`<u>${sel}</u>`:`__${sel}__`;else if(t==="bold")f=c==="2"?`<b>${sel}</b>`:`**${sel}**`;else if(t==="code")f=c==="2"?`<code>${sel}</code>`:`\`\`\`\n${sel}\n\`\`\``;noteTextarea.value=v.slice(0,s)+f+v.slice(e);updateNoteMetadata();showNotification(`Text ${t} applied!`);break}});return typeof r==="function"?r():r};window.handleBulletList=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(s===e){showNotification("Please select text for bullet list!");return}let errorMsg="";while(1){const a=[];if(errorMsg)a.push("message:"+errorMsg);a.push("select: Choose Format, MarkDown (- item)|1, MarkUp (<ul><li>)|2");const n=await showModal({title:"Bullet List",content:a,button:"Cancel, OK"});if(!n||!n.action||n.action==="Cancel")return;const c=String(n.values.choose_format).trim();if(c===""||c==="Choose Format"){errorMsg="Please select a format!";continue}const sel=v.slice(s,e),lines=sel.split(/\r?\n/);let f;if(c==="2"){f="<ul>\n"+lines.map(t=>"<li>"+t+"</li>").join("\n")+"\n</ul>"}else{f=lines.map(t=>"- "+t).join("\n")}noteTextarea.value=v.slice(0,s)+f+v.slice(e);updateNoteMetadata();showNotification("Bullet list applied!");break}});return typeof r==="function"?r():r};window.handleNumberedList=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(s===e){showNotification("Please select text for numbered list!");return}let errorMsg="";while(1){const a=[];if(errorMsg)a.push("message:"+errorMsg);a.push("select: Choose Format, MarkDown (1. item)|1, MarkUp (<ol><li>)|2");const n=await showModal({title:"Numbered List",content:a,button:"Cancel, OK"});if(!n||!n.action||n.action==="Cancel")return;const c=String(n.values.choose_format).trim();if(c===""||c==="Choose Format"){errorMsg="Please select a format!";continue}const sel=v.slice(s,e),lines=sel.split(/\r?\n/);let f;if(c==="2"){f="<ol>\n"+lines.map(t=>"<li>"+t+"</li>").join("\n")+"\n</ol>"}else{f=lines.map((t,i)=>(i+1)+". "+t).join("\n")}noteTextarea.value=v.slice(0,s)+f+v.slice(e);updateNoteMetadata();showNotification("Numbered list applied!");break}});return typeof r==="function"?r():r};window.handleInsertLink=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;const n=await showModal({title:"Insert Link",content:["input: placeholder=Enter URL","input: placeholder=Enter Link Text","Select: Choose Format, Markdown, MarkUp"],button:"Cancel, OK"});if(!n||!n.action||n.action==="Cancel")return;const url=String(n.values.enter_url||"").trim(),text=String(n.values.enter_link_text||"").trim(),fmt=String(n.values.choose_format||"").trim();if(!url||!text||!fmt)return;const f=fmt==="MarkUp"?`<a href="${url}">${text}</a>`:`[${text}](${url})`;noteTextarea.value=v.slice(0,s)+f+v.slice(e);updateNoteMetadata();showNotification("Link inserted!")});return typeof r==="function"?r():r};window.handleInsertImage=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;const n=await showModal({title:"Insert Image",content:["input: placeholder=Enter Image URL","Select: Choose Format, Markdown, MarkUp"],button:"Cancel, OK"});if(!n||!n.action||n.action==="Cancel")return;const url=String(n.values.enter_image_url||"").trim(),fmt=String(n.values.choose_format||"").trim();if(!url||!fmt)return;const f=fmt==="MarkUp"?`<img src="${url}" alt='Image' />`:`![Image](${url})`;noteTextarea.value=s===e?v+f:v.slice(0,s)+f+v.slice(e);updateNoteMetadata();showNotification("Image inserted!")});return typeof r==="function"?r():r};window.handleUppercase=function(){const r=preserveSelection(function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(!v)return;const f=s===e?v.toUpperCase():v.slice(0,s)+v.slice(s,e).toUpperCase()+v.slice(e);noteTextarea.value=f;updateNoteMetadata();showNotification("Converted to uppercase!")});return"function"==typeof r?r():r};window.handleLowercase=function(){const r=preserveSelection(function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(!v)return;const f=s===e?v.toLowerCase():v.slice(0,s)+v.slice(s,e).toLowerCase()+v.slice(e);noteTextarea.value=f;updateNoteMetadata();showNotification("Converted to lowercase!")});return"function"==typeof r?r():r};window.handleAlignLeft=function(){if(!noteTextarea)return;noteTextarea.style.textAlign="left";showNotification("Text aligned left!")};window.handleAlignCenter=function(){if(!noteTextarea)return;noteTextarea.style.textAlign="center";showNotification("Text aligned center!")};window.handleAlignRight=function(){if(!noteTextarea)return;noteTextarea.style.textAlign="right";showNotification("Text aligned right!")};window.increaseIndentation=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd;if(s===e){showNotification("Please select text to indent!");return}const t=noteTextarea.value.slice(s,e),i='\t'+t.replace(/\n/g,'\n\t');noteTextarea.value=noteTextarea.value.slice(0,s)+i+noteTextarea.value.slice(e);updateNoteMetadata();showNotification("Text indented!")});return"function"==typeof r?r():r};window.decreaseIndentation=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd;if(s===e){showNotification("Please select text to un-indent!");return}const t=noteTextarea.value.slice(s,e).split('\n'),i=t.map(e=>e.startsWith('\t')?e.slice(1):e.startsWith('    ')?e.slice(4):e).join('\n');noteTextarea.value=noteTextarea.value.slice(0,s)+i+noteTextarea.value.slice(e);updateNoteMetadata();showNotification("Indentation removed!")});return"function"==typeof r?r():r};window.handleSelectAll=function(){if(!currentNote||!noteTextarea)return;noteTextarea.setSelectionRange(0,noteTextarea.value.length);noteTextarea.blur();showNotification("All text selected!")};window.handleCopyNote=function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,t=s===e?noteTextarea.value:noteTextarea.value.slice(s,e);navigator.clipboard.writeText(t).then(()=>showNotification("Copied to clipboard!")).catch(()=>showNotification("Copy failed (clipboard not available)."))};window.handleCutNote=function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,t=s===e?noteTextarea.value:noteTextarea.value.slice(s,e);navigator.clipboard.writeText(t).then(()=>{noteTextarea.value=s===e?"":noteTextarea.value.slice(0,s)+noteTextarea.value.slice(e);noteTextarea.selectionStart=noteTextarea.selectionEnd=s;updateNoteMetadata();showNotification("Cut to clipboard!")}).catch(()=>showNotification("Cut failed (clipboard not available)."))};window.handleClearNote=function(){const r=preserveSelection(async function(){if(!currentNote||!noteTextarea)return;const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd,v=noteTextarea.value;if(s===e){noteTextarea.value="";}else{noteTextarea.value=v.slice(0,s)+v.slice(e);}updateNoteMetadata();showNotification("Note cleared!")});return"function"==typeof r?r():r};window.handlePasteNote=function(){const r=async function(){if(!currentNote||!noteTextarea)return;if(!navigator.clipboard||!navigator.permissions){showNotification("Paste not supported in this browser.");return}try{const perm=await navigator.permissions.query({name:"clipboard-read"});if(perm.state==="denied"){showNotification("Clipboard access denied. Please allow it in your browser settings.");return}const clip=await navigator.clipboard.readText();const s=noteTextarea.selectionStart,e=noteTextarea.selectionEnd;noteTextarea.value=noteTextarea.value.slice(0,s)+clip+noteTextarea.value.slice(e);const n=s+clip.length;noteTextarea.selectionStart=noteTextarea.selectionEnd=n;updateNoteMetadata();showNotification("Pasted from clipboard!")}catch{showNotification("Paste failed (permission denied or empty clipboard).")}};r()};
